{
	"info": {
		"_postman_id": "auth-service-collection",
		"name": "Auth Service API",
		"description": "Collection para testar os endpoints da API de autenticação Spring Boot",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Parse do JSON da resposta",
									"    const responseJson = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseJson.token) {",
									"        // Armazena o token na variável de ambiente auth_token",
									"        pm.environment.set('auth_token', responseJson.token);",
									"        ",
									"        // Log para confirmar que o token foi capturado",
									"        console.log('Token capturado com sucesso:', responseJson.token);",
									"        ",
									"        // Teste para verificar se o token foi armazenado",
									"        pm.test('Token capturado e armazenado', function () {",
									"            pm.expect(pm.environment.get('auth_token')).to.not.be.undefined;",
									"            pm.expect(pm.environment.get('auth_token')).to.not.be.empty;",
									"        });",
									"    } else {",
									"        console.log('Token não encontrado na resposta');",
									"        pm.test('Token não encontrado na resposta', function () {",
									"            pm.expect.fail('Token não encontrado na resposta JSON');",
									"        });",
									"    }",
									"} else {",
									"    console.log('Registro falhou com status:', pm.response.code);",
									"    pm.test('Registro deve retornar status 200', function () {",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\",\n  \"firstName\": \"{{test_first_name}}\",\n  \"lastName\": \"{{test_last_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Registra um novo usuário no sistema"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"João\",\n  \"lastName\": \"Silva\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"type\": \"Bearer\",\n  \"email\": \"user@example.com\",\n  \"firstName\": \"João\",\n  \"lastName\": \"Silva\",\n  \"expiresAt\": \"2024-01-01T12:00:00\"\n}"
						}
					]
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Parse do JSON da resposta",
									"    const responseJson = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseJson.token) {",
									"        // Armazena o token na variável de ambiente auth_token",
									"        pm.environment.set('auth_token', responseJson.token);",
									"        ",
									"        // Log para confirmar que o token foi capturado",
									"        console.log('Token capturado com sucesso:', responseJson.token);",
									"        ",
									"        // Teste para verificar se o token foi armazenado",
									"        pm.test('Token capturado e armazenado', function () {",
									"            pm.expect(pm.environment.get('auth_token')).to.not.be.undefined;",
									"            pm.expect(pm.environment.get('auth_token')).to.not.be.empty;",
									"        });",
									"    } else {",
									"        console.log('Token não encontrado na resposta');",
									"        pm.test('Token não encontrado na resposta', function () {",
									"            pm.expect.fail('Token não encontrado na resposta JSON');",
									"        });",
									"    }",
									"} else {",
									"    console.log('Login falhou com status:', pm.response.code);",
									"    pm.test('Login deve retornar status 200', function () {",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Realiza login do usuário e retorna token JWT"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"type\": \"Bearer\",\n  \"email\": \"user@example.com\",\n  \"firstName\": \"João\",\n  \"lastName\": \"Silva\",\n  \"expiresAt\": \"2024-01-01T12:00:00\"\n}"
						}
					]
				}
			],
			"description": "Endpoints relacionados à autenticação de usuários"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users (Admin Only)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Lista todos os usuários do sistema (requer role ADMIN)"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"email\": \"admin@example.com\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\",\n    \"roles\": [\"ADMIN\"],\n    \"createdAt\": \"2024-01-01T10:00:00\",\n    \"updatedAt\": \"2024-01-01T10:00:00\"\n  },\n  {\n    \"id\": 2,\n    \"email\": \"user@example.com\",\n    \"firstName\": \"João\",\n    \"lastName\": \"Silva\",\n    \"roles\": [\"USER\"],\n    \"createdAt\": \"2024-01-01T11:00:00\",\n    \"updatedAt\": \"2024-01-01T11:00:00\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						},
						"description": "Obtém informações do usuário atualmente autenticado"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/users/me",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"email\": \"user@example.com\",\n  \"firstName\": \"João\",\n  \"lastName\": \"Silva\",\n  \"roles\": [\"USER\"],\n  \"createdAt\": \"2024-01-01T10:00:00\",\n  \"updatedAt\": \"2024-01-01T10:00:00\"\n}"
						}
					]
				},
				{
					"name": "Get User by ID (Admin Only)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Obtém informações de um usuário específico por ID (requer role ADMIN)"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/users/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"email\": \"user@example.com\",\n  \"firstName\": \"João\",\n  \"lastName\": \"Silva\",\n  \"roles\": [\"USER\"],\n  \"createdAt\": \"2024-01-01T10:00:00\",\n  \"updatedAt\": \"2024-01-01T10:00:00\"\n}"
						}
					]
				},
				{
					"name": "Get User by Email (Admin Only)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/email/{{test_email}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"email",
								"{{test_email}}"
							]
						},
						"description": "Obtém informações de um usuário específico por email (requer role ADMIN)"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/users/email/user@example.com",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"email",
										"user@example.com"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"email\": \"user@example.com\",\n  \"firstName\": \"João\",\n  \"lastName\": \"Silva\",\n  \"roles\": [\"USER\"],\n  \"createdAt\": \"2024-01-01T10:00:00\",\n  \"updatedAt\": \"2024-01-01T10:00:00\"\n}"
						}
					]
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de usuários"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}
